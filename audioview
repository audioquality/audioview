#!/bin/bash
# 
# View audio file as a waveform.
# Display corresponding info from dr14.txt, loudness.txt,
# and some track info as overlay. Use local cache for speedup.
#
# dependencies: audiowaveform (https://github.com/bbcrd/audiowaveform)
#               exiftool
#               feh
#               vorbis-tools
#
# by ClixT, dev@clixt.net
# License: WTFPL
# This work is free. You can redistribute it and/or modify it under the
# terms of the Do What The Fuck You Want To Public License, Version 2,
# as published by Sam Hocevar. See http://www.wtfpl.net/ for more details.
#
################################################################################################
# full path to audiowaveform binary:
AUDIOWAVEFORM=$(which audiowaveform)
# audiowaveform x-axis resolution
PIXELS_PER_SECOND=5
# preview cache directory
CACHEDIR=~/.cache/audioview

if [ ! -x "$AUDIOWAVEFORM" ]; then
  echo "Error: audiowaveform not found"
  exit 1
fi
if [ ! -x $(which exiftool) ]; then
  echo "Error: exiftool not found"
  exit 1
fi
if [ ! -x $(which feh) ]; then
  echo "Error: feh not found"
  exit 1
fi

if [ ! -d "$CACHEDIR" ]; then
  mkdir "$CACHEDIR"
  if [ ! -d "$CACHEDIR" ]; then
    echo "Error: cache $CACHEDIR cannot be created"
    exit 1
  fi
fi

SRCPATH=$(readlink -f "$1")
SRCDIR=$(dirname "$SRCPATH")
FNAME=$(echo -n "$SRCPATH" | sed 's/\\$/\\\\$/' | grep -Eo '[^/]+$')

# temp png image file
TEMPIMAGE=$(echo "$SRCPATH" | grep -Po '[^/]+/[^/]+$' | sed 's/\// - /' | sed 's/[^.]*$/png/')
TEMPIMAGE="$CACHEDIR/$TEMPIMAGE"

# get file info
FILEINFO=$(exiftool -S "$SRCPATH" 2>/dev/null)
SIDE=$(echo "$FILEINFO" | grep -i -m 1 Side: | sed 's/.*:\s*//')
BITRATE=$(echo "$FILEINFO" | grep -i -m 1 AudioBitrate: | sed 's/.*:\s*//')
TRACKNR=$(echo "$FILEINFO" | grep -i -m 1 -E 'Track(N[^:]*r)?:' | sed 's/.*:\s*//' | sed 's/\/.*//')
TRACKNAME=$(echo "$FILEINFO" | grep -i -m 1 Title: | sed 's/[^:]*:\s*//')
ARTIST=$(echo "$FILEINFO" | grep -i -m 1 Artist: | sed 's/[^:]*:\s*//')
ALBUM=$(echo "$FILEINFO" | grep -i -m 1 Album: | sed 's/[^:]*:\s*//')
DATE=$(echo "$FILEINFO" | grep -i -m 1 -E '^Date(TimeOriginal)?:' | sed 's/.*:\s*//')
YEAR=$(echo "$FILEINFO" | grep -i -m 1 -E '^Year:' | sed 's/.*:\s*//')
if [ -z "$DATE" -a -n "$YEAR" ]; then
  DATE=$YEAR
fi

if [ ! -s "$TEMPIMAGE" ]; then
  DURATION=$(echo "$FILEINFO" | grep -i -m 1 Duration:)
  if [[ $DURATION =~ ([0-9]+):([0-9]+):([0-9]+) ]]; then
    LENGTH=$(expr ${BASH_REMATCH[1]} \* 3600 + ${BASH_REMATCH[2]} \* 60 + ${BASH_REMATCH[3]} + 1)
  elif [[ $DURATION =~ ([0-9]+)\.[0-9]+.*s ]]; then
    LENGTH=$(expr ${BASH_REMATCH[1]} + 1)
  fi
  # check audio length
  if [[ -z $LENGTH ]]; then
    echo "Cannot determine length of audio file"
    exit 1
  fi
  # calculate required png width in pixels
  WIDTH=$(expr $LENGTH \* $PIXELS_PER_SECOND)
  
  # detect ogg and convert to wav (ogg support for audiowaveform)
  if [[ $(file "$SRCPATH" | grep -c "Vorbis audio") -eq 1 ]]; then
    AUDIOFILE=$TEMPIMAGE.wav
    oggdec -o "$AUDIOFILE" "$SRCPATH" 2>/dev/null
  else
    AUDIOFILE="$SRCPATH"
  fi
  
  # generate png file
  $AUDIOWAVEFORM -i "$AUDIOFILE" -o "$TEMPIMAGE" --pixels-per-second $PIXELS_PER_SECOND -w $WIDTH -h 512 --compression 5 --background-color 000000 --border-color 996666 --axis-label-color BBBBBB
fi

# read dynamic range info from dr14.txt if available
cd "$SRCDIR"
# read loudness range from loudness.txt if available
LU=$(find -iname loudness.txt -exec sh -c "grep -o \".*$FNAME\" '{}' " \; | grep -Po '\S.*dBTP' | tr -s ' ')
# get DR
DR=$(find \( -iname dr14.txt -o -iname foo_dr.txt \) -exec sh -c "grep -E \"DR.*\s0?$TRACKNR\s*\-\" '{}' " \; | grep -Fi "$TRACKNAME" | grep -Po 'DR\d+' | head -n 1)

# prepare metadata info for display
#INFO=" "$(echo $TEMPIMAGE | sed 's/.*\///')"
# "$(echo -n "$ARTIST" | sed 's/\\$/\\\\$/')" - "$(echo -n "$ALBUM" | sed 's/\\$/\\\\$/')" ($DATE) - $SIDE$TRACKNR - "$(echo -n "$TRACKNAME" | sed 's/\\$/\\\\$/')"
# $LU
# $DR
# $BITRATE"
INFO=" "$(echo -n "$ARTIST" | sed 's/\\$/\\\\$/')" - "$(echo -n "$ALBUM" | sed 's/\\$/\\\\$/')" ($DATE) - $SIDE$TRACKNR - "$(echo -n "$TRACKNAME" | sed 's/\\$/\\\\$/')"
 $LU
 $DR
 $BITRATE"
# view waveform
feh --borderless --info "echo \"$INFO\"" --no-menus "$TEMPIMAGE" 2>/dev/null &

# clean up
rm "$TEMPIMAGE"*wav 2>/dev/null
# delete old files from cache
find "$CACHEDIR" -maxdepth 1 -type f -mtime +30 -delete 2>/dev/null

exit 0
